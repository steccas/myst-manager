version: '3'
services:
# core
  myst_node:
    image: mysteriumnetwork/myst:latest
    command:
      - '--udp.ports=59850:60000'
      - 'service --agreed-terms-and-conditions'
    networks:
      - myst
    ports:
      - "${WG_IFACE_IP}:4449:4449/tcp" # didn't manage to proxy this / so it's accesible only from another manager or ssh
      - '59850-60000:59850-60000/udp'
    container_name: myst_node # change this as you wish
    cap_add:
      - NET_ADMIN
    volumes:
      - '/var/lib/mysterium-node:/var/lib/mysterium-node'
      - '/etc/mysterium-node:/etc/mysterium-node'
    restart: unless-stopped

  dashboard:
    image: lscr.io/linuxserver/heimdall
    container_name: dashboard
    env_file: ./envs/.env_dashboard
    networks:
      - proxy_d
    volumes:
      - /etc/heimdall:/config
    restart: unless-stopped

  proxy:
    image: ghcr.io/linuxserver/swag:latest
    container_name: proxy
    cap_add:
      - NET_ADMIN
    env_file: ./envs/.env_proxy
    networks:
      - proxy_m
      - proxy_d
      - proxy_wg
    volumes:
      - /etc/swag:/config
    ports:
      - ${WG_IFACE_IP}:443:443/tcp
      - ${WG_IFACE_IP}:80:80/tcp
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - dashboard
      - myst_node
    restart: unless-stopped

# monitoring
  uptime:
    container_name: uptime
    image: louislam/uptime-kuma:latest
    restart: unless-stopped
    networks: # port 3001
      - proxy_m
    volumes:
      - /etc/uptime-kuma:/app/data
    depends_on:
      - myst_node

# wireguard services
  wg-gen-web-mg:
    image: vx3r/wg-gen-web:latest
    container_name: vpn-mg
#    ports:
#      - '127.0.0.1:8080:8080' # enable only for initial vpn configs via ssh tunnel
    networks: # port 8080
      man_vpn:
        ipv4_address: 172.31.0.3
      proxy_wg:
    env_file: ./envs/.env_wg_gen_web_mg
    volumes:
      - /etc/wireguard:/data
    depends_on:
      - wg-json-api-mg
    restart: unless-stopped

  wg-json-api-mg:
    image: james/wg-api:latest
    #build:
    #  context: ./wg-api
    container_name: vpn-api-mg
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    network_mode: "host"
    command: wg-api --device wg0 --listen 172.17.0.1:8182
  
  wg-gen-web-nodes:
    image: vx3r/wg-gen-web:latest
    container_name: vpn-nodes
#    ports:
#      - '127.0.0.1:8080:8080' # enable only for initial vpn configs via ssh tunnel
    networks: # port 8080
      man_vpn:
        ipv4_address: 172.31.0.5
      proxy_wg:
    env_file: ./envs/.env_wg_gen_web_nodes
    volumes:
      - /etc/wireguard:/data
    depends_on:
      - wg-json-api-nodes
    restart: unless-stopped

  wg-json-api-nodes:
    image: james/wg-api:latest
    container_name: vpn-api-nodes
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    network_mode: "host"
    command: wg-api --device wg1 --listen 172.17.0.1:8184

# Watchtower
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

# DNS

# Security

    
networks:
  myst:
    name: myst
    driver: bridge
  man_vpn:
    name: myst_man_wg_ui_bridge
    driver: bridge
    ipam:
      config:
        - subnet: 172.31.0.0/24
    driver_opts:
      com.docker.network.bridge.name: br_myst_wg_ui
  proxy_m:
    name: proxy_m
    driver: bridge
  proxy_d:
    name: proxy_d
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.16.0/24
    driver_opts:
      com.docker.network.bridge.name: br_myst_proxy_d
  proxy_wg:
    name: proxy_wg
    driver: bridge 